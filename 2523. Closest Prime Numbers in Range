
Question link:- https://leetcode.com/problems/closest-prime-numbers-in-range/description/

Video link:- https://youtu.be/Aa_RqXLVxaQ

class Solution {
public:
    vector<bool> prime;
    void seive(int n){
        prime.resize(n+1, true);
        prime[0] = false;
        prime[1] = false;
        int i = 2;
        while(i*i <= n){
            if(prime[i]){
                int div = i;
                for(int j=i*i; j<=n; j+=i){
                    if(j % div == 0) prime[j] = false;
                }
            }
            i++;
        }
    }
    vector<int> closestPrimes(int left, int right) {
        seive(right);
        vector<int> arr;
        for(int i=left; i<=right; i++){
            if(prime[i]) arr.push_back(i);
        }
        vector<int> ans = {-1, -1};
        if(arr.size() < 2) return ans;
        int diff = 1e9;
        for(int i=0; i<arr.size()-1; i++){
            if(arr[i+1] - arr[i] < diff){
                ans = {arr[i], arr[i+1]};
                diff = arr[i+1] - arr[i];
            }
        }
        return ans;
    }
};
