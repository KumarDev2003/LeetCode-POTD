
Question link:- https://leetcode.com/problems/zero-array-transformation-ii/description/

Video link:- Coming Soon...

class Solution {
public:
    bool fun(vector<int>& nums, vector<vector<int>>& queries, int k){
        int n = nums.size();
        vector<int> diff(n, 0);
        for(auto it : queries){
            if(k >= 0){
                int l = it[0];
                int r = it[1];
                int val = it[2];
                diff[l] += val;
                if(r+1 < n) diff[r+1] -= val;
            }else{
                break;
            }
            k--;
        }
        for(int i=1; i<n; i++) diff[i] += diff[i-1];
        for(int i=0; i<n; i++){
            if(nums[i] - diff[i] > 0) return false;
        }
        return true;
    }
    int minZeroArray(vector<int>& nums, vector<vector<int>>& queries) {
        bool b = true;
        for(auto it : nums) if(it != 0) b = false;
        if(b) return 0;
        int n = queries.size();
        int l = 0;
        int h = n-1;
        int ans = -1;
        while(l <= h){
            int mid = (l+h)/2;
            if(fun(nums, queries, mid)){
                ans = mid+1;
                h = mid-1;
            }else{
                l = mid+1;
            }
        }
        return ans;
    }
};
